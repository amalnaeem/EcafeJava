
import javax.swing.JOptionPane;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.JTextField;
 
	   


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Amal
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    
     static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
   static final String DB_URL = "jdbc:mysql://localhost/cafe?useSSL=true";

   //  Database credentials
   static final String USER = "root";
   static final String PASS = "";
   Connection conn = null;
   Statement stmt = null;
 public JTable j; 
 public String ptime;
	 public String bill;
         public Login(){
         initComponents();
         };
    public Login(JTable Jt,String b,String pt) {
        initComponents();
            j=Jt;
            ptime=pt;
            bill=b;
            
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Login");

        jLabel2.setText("Enter Username");

        jLabel3.setText("Enter Password");

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Not registered?");

        jButton2.setText("Signup");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                    .addComponent(jTextField1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jButton1)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton2))
                .addGap(69, 69, 69))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.out.print(ptime);
        // TODO add your handling code here:
        Connection conn = null;
   Statement stmt = null;
    
        String inputName = jTextField1.getText();
        String pswrd = jPasswordField1.getText();
        //JOptionPane.showMessageDialog(null, pswrd);
        
        
   try{
      //STEP 2: Register JDBC driver
	   Class.forName("com.mysql.jdbc.Driver").newInstance();
	   conn = DriverManager.getConnection("jdbc:mysql://localhost/cafe?useSSL=true", "root","");
           String type="";
           int id;
	   Statement st = conn.createStatement();
	   st.executeQuery("select ID,Username, Password, Type from users where Username = '" +inputName+"' and Password = '" +pswrd+"'" );
	  
	   ResultSet rs = st.getResultSet();
           
           if(rs.next())
           {
             /*  while(rs.next())
                {*/
                    type = rs.getString("Type");
                    System.out.println(type);
                    id=rs.getInt("ID");
                    System.out.println(id);
               /* }*/
                if (type.equals("admin"))
                {
                     new AdminJFrame().setVisible(true);
                     this.dispose();//to close the current jframe 
                }
                else if (type.equals("user"))
                {
                   
                 
                        java.util.Date now = new java.util.Date();
                   
                    Timestamp stamp =  new Timestamp(now.getTime());
                  
                    String startTime = "10:00";
                    String endTime = "22:00";
                    SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
                        java.util.Date d1 = sdf.parse(startTime);
                    java.util.Date d2 = sdf.parse(endTime);
                    if(ptime != null && !ptime.isEmpty())
                    {
                        
                    java.util.Date d3 = sdf.parse(ptime);
                    
                   // SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd");//dd/MM/yyyy
                    
                    java.util.Date pdate= new SimpleDateFormat("HH:mm").parse(ptime);
                     Timestamp pt =  new Timestamp(pdate.getTime());
                     
                      
                        Statement st1 = conn.createStatement();
                          // MessageBox.Show("hello");
                        if(d3.after(d1)&& d3.before(d2))
                        {   
                            for( int i =0;i <= j.getRowCount()-1 ; i++ )
                            {
                                Statement st2= conn.createStatement();
                                String s;    
                                s=(String) j.getValueAt(i,0);
                                 rs =st2.executeQuery("select ID from items where IName = '" +s+"'" );                              
                                 if(rs.next())
                                 {
                                 System.out.print(rs.getInt(1));
                                 }
                                
                                String query = " insert into orders (UID,OrderType,Status,ItemID,ODate,TotalBill,PTime)"
                                    + " values (?, ?, ?, ?, ? ,? ,?)";

                                  // create the mysql insert preparedstatement
                                  PreparedStatement preparedStmt = conn.prepareStatement(query);
                                  preparedStmt.setInt (1, id);
                                  preparedStmt.setString (2, "Pick UP");
                                  preparedStmt.setString (3, "Incomplete");
                                  preparedStmt.setInt   (4, rs.getInt("ID") );
                                  preparedStmt.setTimestamp(5, stamp);
                                  preparedStmt.setString (6, bill);
                                  preparedStmt.setTimestamp    (7, pt);

                                  // execute the preparedstatement
                                  preparedStmt.execute();

                            }   
                            
                            JOptionPane.showMessageDialog(null, "Your Order Has been Placed and you can pick it up at "+ ptime);
                               //MessageBox.Show("Your Order Has been Placed and it will be delivered around " + dtime.ToString("hh:mm///"));
                        }
                        else  JOptionPane.showMessageDialog(null, "Sorry we donot provide service at the given time");
                    }
                    
                    else
                    {
                    Calendar cal = Calendar.getInstance();
                    cal.add(Calendar.HOUR, 1);
                    Timestamp timestamp = new Timestamp(cal.getTime().getTime());
                    java.util.Date newDate = cal.getTime();
                    System.out.println(newDate);
                    System.out.println(d1);
                    System.out.println(d2);
                    //Timestamp timestamp = new Timestamp(long);
                    int dt = newDate.getHours();
                    int ot = d1.getHours();
                    int ct = d2.getHours();
                        
                      if(ot <= dt && dt <= ct)  
                      { for( int i =0;i <= j.getRowCount()-1 ; i++ )
                            {
                                Statement st2= conn.createStatement();
                                String s;    
                                s=(String) j.getValueAt(i,0);
                                ResultSet rs1 =st2.executeQuery("select ID from items where IName = '" +s+"'" );                              
                               /* String sql = "insert into 'orders' (UID,OrderType,Status,ItemID,ODate,TotalBill,PTime) values ('"+id+"','"+"Pick Up"+"','"+"Incomplete"+"','" + rs.next() + "','" + date1+ "','" + bill + "','" + d3+ "')";
                                Statement st3= conn.createStatement()D
                                st3.executeUpdate(sql);*/
                                
                                String query = " insert into orders (UID,OrderType,Status,ItemID,ODate,TotalBill,DTime)"
                                    + " values (?, ?, ?, ?, ? ,? ,?)";

                                  // create the mysql insert preparedstatement
                                  PreparedStatement preparedStmt = conn.prepareStatement(query);
                                  preparedStmt.setInt (1, id);
                                  preparedStmt.setString (2, "Delivery");
                                  preparedStmt.setString (3, "Incomplete");
                                  preparedStmt.setInt   (4, rs.getInt("ID") );
                                  preparedStmt.setTimestamp(5, stamp);
                                  preparedStmt.setString (6, bill);
                                  preparedStmt.setTimestamp    (7, timestamp);

                                  // execute the preparedstatement
                                  preparedStmt.execute();

                            }   
                            
                            JOptionPane.showMessageDialog(null, "Your Order Has been Placed and it will be delivered in an hour ");
                      }
                      else JOptionPane.showMessageDialog(null, "Sorry we are closing soon! ");
                    }
                                           
                    this.setVisible(false);
             new MainJFrame().setVisible(true); 
                }
                else if (type.equals("staff"))
                {
                    new StaffJFrame().setVisible(true);
                    this.dispose();//to close the current jframe  
                }
           }
           else
           {
               JOptionPane.showMessageDialog(null, "Recheck your username and password");
           }
            
	   
	   
   }

   
   catch(SQLException se){
      //Handle errors for JDBC
      se.printStackTrace();
   }catch(Exception e){
      //Handle errors for Class.forName
      e.printStackTrace();
   }finally{
      //finally block used to close resources
      try{
         if(stmt!=null)
            stmt.close();
      }catch(SQLException se2){
      }// nothing we can do
      try{
         if(conn!=null)
            conn.close();
      }catch(SQLException se){
         se.printStackTrace();
      }//end finally try
   }//end try
   

        //String inputName = jTextField1.getText();
       // if(inputName.equals("admin"))
        //{
         //JOptionPane.showMessageDialog(null, "Admin Logged in");
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
        new signup().setVisible(true); 
    }//GEN-LAST:event_jButton2ActionPerformed
        
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login(new JTable(),new String(),new String()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private boolean empty(String ptime) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
